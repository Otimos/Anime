
local ANIME_FIGHTERS_PLACE_ID = 6299805723 
 if game.PlaceId ~= ANIME_FIGHTERS_PLACE_ID  then return end 
  
 _G.disabled = false 
 _G.themes = _G.themes or { -- themes 
     Background = Color3.fromRGB(24, 24, 24), 
     Glow = Color3.fromRGB(61, 231, 242), 
     Accent = Color3.fromRGB(0, 0, 0), 
     LightContrast = Color3.fromRGB(36, 36, 36), 
     DarkContrast = Color3.fromRGB(14, 14, 14), 
     TextColor = Color3.fromRGB(61, 231, 242) 
 } 
  
 -- init 
 local NAME = "QUEM É (OTIMOS ±_±)?" 
 local library =  loadstring(game:HttpGet("https://raw.githubusercontent.com/Otimos/rip.OTIMOS/main/rip.OTIMOS"))() 
 local GUI = library.new(NAME) 
  
 local HS = game:GetService("HttpService") 
 local RS = game:GetService("ReplicatedStorage") 
 local WS = game:GetService("Workspace") 
 local P = game:GetService("Players") 
 local VU = game:GetService("VirtualUser") 
 local VIM = game:GetService("VirtualInputManager") 
 local RunS = game:GetService("RunService") 
 local TS = game:GetService("TweenService") 
  
 local player = P.LocalPlayer local enemyDamagedEffect = require(staterPlayerScriptsFolder.LocalPetHandler.EnemyDamagedEffect) 
  
 local data = store.GetStoreProxy("GameData") 
 local IGNORED_RARITIES = {"Secret", "Raid", "Divine"} 
 local IGNORED_WORLDS = {"Raid", "Tower", "Titan", "Christmas"} 

 local mobs = {}  
 
local damagedEffectFunctions = { 
     [true] = function() 
         return true 
     end, 
     [false] = enemyDamagedEffect.DoEffect, 
 }

local autoDamage 
 local autoCollect 
 local autoUltSkip 
 
     --quest 
     do 
         --autoAcceptQuest 
         task.spawn(function() 
             while not _G.disabled do 
                 if autoQuest and not table.find(IGNORED_WORLDS, player.World.Value) then 
                     local NPC = WS.Worlds[player.World.Value][player.World.Value] 
                     REMOTE.StartQuest:FireServer(NPC) 
                     REMOTE.FinishQuest:FireServer(NPC) 
                     REMOTE.FinishQuestline:FireServer(NPC) 
                 end 
                 task.wait() 
             end 
             autoQuest = nil 
         end) 
  
         --autoQuest 
         task.spawn(function() 
             local objectives = PlayerGui.MainGui.Quest.Objectives 
  
             while not _G.disabled do 
                 if autoQuest and objectives:FindFirstChild("QuestText") and not table.find(IGNORED_WORLDS, player.World.Value) then 
                     for _, obj in ipairs(objectives:GetChildren()) do 
                         if obj.Name == "QuestText" and obj.TextColor3 ~= Color3.fromRGB(0, 242, 38) then 
                             local world = WS.Worlds[player.World.Value] 
                             local enemySpawns = world.EnemySpawners 
                             local enemyModels = world.Enemies:GetChildren() 
  
                             for _, enemy in ipairs(enemyModels) do 
                                 if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Health") and enemy.Health.Value > 0 then 
                                     local found = string.match(obj.Text, enemy.DisplayName.Value) 
  
                                     if found then 
                                         local enemySpawn 
  
                                         for _, spawn in ipairs(enemySpawns:GetChildren()) do 
                                             if spawn.CurrentEnemy.Value == enemy then 
                                                 enemySpawn = spawn 
                                                 break 
                                             end 
                                         end 
  
                                         if enemySpawn and enemy ~= nil and enemy:FindFirstChild("Attackers") then 
                                             character.HumanoidRootPart.CFrame = enemy.HumanoidRootPart.CFrame 
                                             movePetsToPlayer() 
                                             task.wait() 
  
                                             repeat 
                                                 if enemy ~= nil and enemy:FindFirstChild("Attackers") and table.find(enemyModels, enemy) then 
                                                     BINDABLE.SendPet:Fire(enemy, true) 
                                                 end 
  
                                                 enemy = enemySpawn.CurrentEnemy.Value 
                                                 task.wait() 
                                             until _G.disabled 
                                             or player.World.Value ~= world.Name 
                                             or enemy == nil 
                                             or enemy:FindFirstChild("Attackers") == nil 
                                             or table.find(enemyModels, enemy) == nil 
                                             or not autoQuest 
                                             or table.find(IGNORED_WORLDS, player.World.Value) 
                                         end 
  
                                         retreat() 
                                     end 
                                 end 
                             end 
  
                             table.clear(enemyModels) 
                             ememyModels = nil 
                         end 
                     end 
                 end 
                 task.wait() 
             end 
             autoQuest = nil 
             objectives = nil 
         end) 
     end 
 warn("Script fully loaded!")
